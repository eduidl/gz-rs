name: Test

on:
  schedule:
    - cron: "0 12 * * 6"

  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    strategy:
      fail-fast: false

      matrix:
        include:
          - { rust: 1.64.0,  distro: garden,   transport: gz-transport12 }
          - { rust: stable,  distro: fortress, transport: ignition-transport11 }
          - { rust: stable,  distro: garden,   transport: gz-transport12 }
          - { rust: stable,  distro: harmonic, transport: gz-transport13 }
          - { rust: beta,    distro: garden,   transport: gz-transport12 }
          - { rust: nightly, distro: garden,   transport: gz-transport12 }

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: Install Gazebo
        run: |
          sudo wget https://packages.osrfoundation.org/gazebo.gpg -O /usr/share/keyrings/pkgs-osrf-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/pkgs-osrf-archive-keyring.gpg] http://packages.osrfoundation.org/gazebo/ubuntu-stable $(lsb_release -cs) main" \
            | sudo tee /etc/apt/sources.list.d/gazebo-stable.list > /dev/null
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/pkgs-osrf-archive-keyring.gpg] http://packages.osrfoundation.org/gazebo/ubuntu-prerelease $(lsb_release -cs) main" \
           | sudo tee /etc/apt/sources.list.d/gazebo-prerelease.list > /dev/null
          sudo apt update -qq
          sudo apt install -yqq lib${{ matrix.transport }}-dev

      - name: Check
        run: cargo build --workspace --features ${{ matrix.distro }}

      - name: Test
        run: cargo test --workspace --features ${{ matrix.distro }}

  audit:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - name: Install Tools
        run: cargo install cargo-audit cargo-outdated

      - name: Outdated
        run: cargo outdated --exit-code 1

      - name: Audit
        run: cargo audit
